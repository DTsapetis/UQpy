
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/surrogates/gpr/plot_gpr_no_noise.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_surrogates_gpr_plot_gpr_no_noise.py>`
        to download the full example code. or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_surrogates_gpr_plot_gpr_no_noise.py:


Gaussian Process without noise
======================================================================

.. GENERATED FROM PYTHON SOURCE LINES 9-11

This jupyter script shows the performance of GaussianProcessRegressor class in the UQpy. A training data is generated
using a function (:math:`f(x)`, as defined below), which is used to train a surrogate model.

.. GENERATED FROM PYTHON SOURCE LINES 16-18

Import the necessary modules to run the example script. Notice that FminCobyla is used here, to solve the MLE
optimization problem with constraints.

.. GENERATED FROM PYTHON SOURCE LINES 21-35

.. code-block:: Python


    import warnings

    import matplotlib.pyplot as plt
    import numpy as np

    from UQpy.surrogates.gaussian_process.regression_models.LinearRegression import LinearRegression
    from UQpy.utilities import RBF

    warnings.filterwarnings('ignore')
    from UQpy.utilities.MinimizeOptimizer import MinimizeOptimizer
    from UQpy.surrogates import GaussianProcessRegression









.. GENERATED FROM PYTHON SOURCE LINES 36-39

Consider the following function :math:`f(x)`.

.. math:: f(x) = \frac{1}{100} + \frac{5}{8}(2x-1)^4[(2x-1)^2 + 4\sin{(5 \pi x)^2}], \quad \quad x \in [0,1]

.. GENERATED FROM PYTHON SOURCE LINES 42-48

.. code-block:: Python


    def funct(x):
        y = (1 / 100) + (5 / 8) * ((2 * x - 1) ** 4) * (((2 * x - 1) ** 2) + 4 * np.sin(5 * np.pi * x) ** 2)
        return y









.. GENERATED FROM PYTHON SOURCE LINES 49-50

Define the training data set. The following 13 points have been used to fit the GP.

.. GENERATED FROM PYTHON SOURCE LINES 53-57

.. code-block:: Python


    X_train = np.array([0, 0.06, 0.08, 0.26, 0.27, 0.4, 0.52, 0.6, 0.68, 0.81, 0.9, 0.925, 1]).reshape(-1, 1)
    y_train = funct(X_train)








.. GENERATED FROM PYTHON SOURCE LINES 58-59

Define the test data.

.. GENERATED FROM PYTHON SOURCE LINES 62-66

.. code-block:: Python


    X_test = np.linspace(0, 1, 100).reshape(-1, 1)
    y_test = funct(X_test)








.. GENERATED FROM PYTHON SOURCE LINES 67-68

The plot shows the test function in dashed red line and 13 training points are represented by blue dots.

.. GENERATED FROM PYTHON SOURCE LINES 71-83

.. code-block:: Python


    fig, ax = plt.subplots(figsize=(8, 6))
    ax.plot(X_test, y_test, 'r--', linewidth=2, label='Test Function')
    ax.plot(X_train, y_train, 'bo', markerfacecolor='b', markersize=10, label='Training Data')
    ax.plot(X_test, np.zeros((X_test.shape[0], 1)))
    ax.tick_params(axis='both', which='major', labelsize=12)
    ax.set_xlabel('x', fontsize=15)
    ax.set_ylabel('f(x)', fontsize=15)
    ax.set_ylim([-0.3, 1.8])
    ax.legend(loc="upper right", prop={'size': 12});
    plt.grid()




.. image-sg:: /auto_examples/surrogates/gpr/images/sphx_glr_plot_gpr_no_noise_001.png
   :alt: plot gpr no noise
   :srcset: /auto_examples/surrogates/gpr/images/sphx_glr_plot_gpr_no_noise_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 84-91

Train GPR
~~~~~~~~~~~~~
- No Noise
- No Constraints

Define kernel used to define the covariance matrix. Here, the application of Radial Basis Function (RBF) kernel is
demonstrated.

.. GENERATED FROM PYTHON SOURCE LINES 94-97

.. code-block:: Python


    kernel1 = RBF()








.. GENERATED FROM PYTHON SOURCE LINES 98-99

Define the optimizer used to identify the maximum likelihood estimate.

.. GENERATED FROM PYTHON SOURCE LINES 102-106

.. code-block:: Python


    bounds_1 = [[10 ** (-4), 10 ** 3], [10 ** (-3), 10 ** 2]]
    optimizer1 = MinimizeOptimizer(method='L-BFGS-B', bounds=bounds_1)








.. GENERATED FROM PYTHON SOURCE LINES 107-109

Define the 'GaussianProcessRegressor' class object, the input attributes defined here are kernel, optimizer, initial
estimates of hyperparameters and number of times MLE is identified using random starting point.

.. GENERATED FROM PYTHON SOURCE LINES 112-116

.. code-block:: Python


    gpr1 = GaussianProcessRegression(kernel=kernel1, hyperparameters=[10 ** (-3), 10 ** (-2)], optimizer=optimizer1,
                                     optimizations_number=10, noise=False, regression_model=LinearRegression())








.. GENERATED FROM PYTHON SOURCE LINES 117-118

Call the 'fit' method to train the surrogate model (GPR).

.. GENERATED FROM PYTHON SOURCE LINES 121-125

.. code-block:: Python


    gpr1.fit(X_train, y_train)









.. GENERATED FROM PYTHON SOURCE LINES 126-127

The maximum likelihood estimates of the hyperparameters are as follows:

.. GENERATED FROM PYTHON SOURCE LINES 130-136

.. code-block:: Python


    gpr1.hyperparameters

    print('Length Scale: ', gpr1.hyperparameters[0])
    print('Process Variance: ', gpr1.hyperparameters[1])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Length Scale:  0.07355987827892121
    Process Variance:  0.5002359560853934




.. GENERATED FROM PYTHON SOURCE LINES 137-139

Use 'predict' method to compute surrogate prediction at the test samples. The attribute 'return_std' is a boolean
indicator. If 'True', 'predict' method also returns the standard error at the test samples.

.. GENERATED FROM PYTHON SOURCE LINES 142-146

.. code-block:: Python


    y_pred1, y_std1 = gpr1.predict(X_test, return_std=True)









.. GENERATED FROM PYTHON SOURCE LINES 147-149

The plot shows the test function in dashed red line and 13 training points are represented by blue dots. Also, blue
curve shows the GPR prediction for :math:`x \in (0, 1)` and yellow shaded region represents 95% confidence interval.

.. GENERATED FROM PYTHON SOURCE LINES 152-167

.. code-block:: Python


    fig, ax = plt.subplots(figsize=(8.5,7))
    ax.plot(X_test,y_test,'r--',linewidth=2,label='Test Function')
    ax.plot(X_train,y_train,'bo',markerfacecolor='b', markersize=10, label='Training Data')
    ax.plot(X_test,y_pred1,'b-', lw=2, label='GP Prediction')
    ax.plot(X_test, np.zeros((X_test.shape[0],1)))
    ax.fill_between(X_test.flatten(), y_pred1-1.96*y_std1,
                    y_pred1+1.96*y_std1,
                    facecolor='yellow',label='95% CI')
    ax.tick_params(axis='both', which='major', labelsize=12)
    ax.set_xlabel('x', fontsize=15)
    ax.set_ylabel('f(x)', fontsize=15)
    ax.set_ylim([-0.3,1.8])
    plt.title('GP surrogate (No noise, No Constraints)')
    ax.legend(loc="upper right",prop={'size': 12})
    plt.grid()


.. image-sg:: /auto_examples/surrogates/gpr/images/sphx_glr_plot_gpr_no_noise_002.png
   :alt: GP surrogate (No noise, No Constraints)
   :srcset: /auto_examples/surrogates/gpr/images/sphx_glr_plot_gpr_no_noise_002.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.497 seconds)


.. _sphx_glr_download_auto_examples_surrogates_gpr_plot_gpr_no_noise.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/SURGroup/UQpy/master?urlpath=lab/tree/notebooks/auto_examples/surrogates/gpr/plot_gpr_no_noise.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_gpr_no_noise.ipynb <plot_gpr_no_noise.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_gpr_no_noise.py <plot_gpr_no_noise.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_gpr_no_noise.zip <plot_gpr_no_noise.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
