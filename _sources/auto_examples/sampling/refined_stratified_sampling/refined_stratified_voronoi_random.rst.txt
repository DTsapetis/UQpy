
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/sampling/refined_stratified_sampling/refined_stratified_voronoi_random.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_sampling_refined_stratified_sampling_refined_stratified_voronoi_random.py>`
        to download the full example code. or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_sampling_refined_stratified_sampling_refined_stratified_voronoi_random.py:


Voronoi Refined Stratified Sampling - Random Refinement
============================================================

In this example, Stratified sampling is used to generate samples from Uniform probability distribution and sample are
added using adaptive approach Refined Stratified Sampling.

.. GENERATED FROM PYTHON SOURCE LINES 11-13

Import the necessary libraries. Here we import standard libraries such as numpy and matplotlib, but also need to
import the :class:`.TrueStratifiedSampling` and :class:`.RefinedStratifiedSampling` class from UQpy.

.. GENERATED FROM PYTHON SOURCE LINES 16-22

.. code-block:: Python


    from UQpy.sampling.stratified_sampling.strata import VoronoiStrata
    from UQpy.sampling import TrueStratifiedSampling, RefinedStratifiedSampling, RandomRefinement
    from UQpy.distributions import Uniform
    import matplotlib.pyplot as plt


.. GENERATED FROM PYTHON SOURCE LINES 23-24

Create a distribution object.

.. GENERATED FROM PYTHON SOURCE LINES 27-32

.. code-block:: Python


    marginals = [Uniform(loc=0., scale=1.), Uniform(loc=0., scale=1.)]

    strata = VoronoiStrata(seeds_number=16, dimension=2)


.. GENERATED FROM PYTHON SOURCE LINES 33-34

Run stratified sampling.

.. GENERATED FROM PYTHON SOURCE LINES 37-39

.. code-block:: Python

    x = TrueStratifiedSampling(distributions=marginals, strata_object=strata, nsamples_per_stratum=1, random_state=1)


.. GENERATED FROM PYTHON SOURCE LINES 40-41

Plot the resulting stratified samples and the boundaries of the strata in the :math:`U(0,1)` space.

.. GENERATED FROM PYTHON SOURCE LINES 44-53

.. code-block:: Python


    from scipy.spatial import voronoi_plot_2d
    fig = voronoi_plot_2d(strata.voronoi)
    plt.title('Stratified Samples (U(0,1)) - Voronoi Stratification')
    plt.plot(x.samples[:, 0], x.samples[:, 1], 'dm')
    plt.ylim(0, 1)
    plt.xlim(0, 1)
    plt.show()


.. GENERATED FROM PYTHON SOURCE LINES 54-56

Using UQpy :class:`.RefinedStratifiedSampling` class to expand samples generated by :class:`.TrueStratifiedSampling`
class. In this example, two new samples are generated inside cells with maximum weight associated with it.

.. GENERATED FROM PYTHON SOURCE LINES 59-64

.. code-block:: Python


    refinement = RandomRefinement(strata=strata)
    y = RefinedStratifiedSampling(stratified_sampling=x, nsamples=18, refinement_algorithm=refinement,
                                  samples_per_iteration=2, random_state=2)


.. GENERATED FROM PYTHON SOURCE LINES 65-69

The figure shows the voronoi tesselation of initial samples and samples generated using
:class:`.RefinedStratifiedSampling` class. The :class:`.RefinedStratifiedSampling` class
creates a Delaunay triangulation using existing samples and generate a new sample inside the triangle with maximum
volume.

.. GENERATED FROM PYTHON SOURCE LINES 72-81

.. code-block:: Python


    fig2 = voronoi_plot_2d(strata.voronoi)
    plt.title('Refined Stratified Samples - Voronoi Stratification')
    plt.plot(x.samples[:16, 0], x.samples[:16, 1], 'dm')
    plt.scatter(y.samplesU01[16:18, 0], y.samplesU01[16:18, 1], marker='s', color='black')
    plt.ylim(0, 1)
    plt.xlim(0, 1)
    plt.show()


.. GENERATED FROM PYTHON SOURCE LINES 82-85

Further, :class:`.RefinedStratifiedSampling` class is used to adaptively increase the sample size. In this example,
samples are randomly added in cell with maximum weights associated with it and new sample generated using
:class:`.SimplexSampling` class.

.. GENERATED FROM PYTHON SOURCE LINES 88-91

.. code-block:: Python


    y.run(nsamples=50)


.. GENERATED FROM PYTHON SOURCE LINES 92-94

In the figure shown below, all samples generated from :class:`.TrueStratifiedSampling` and
:class:`.RefinedStratifiedSampling` class are plotted.

.. GENERATED FROM PYTHON SOURCE LINES 97-104

.. code-block:: Python


    fig2 = voronoi_plot_2d(y.refinement_algorithm.strata.voronoi)
    plt.title('Refined Stratified Samples - Voronoi Stratification')
    plt.plot(x.samples[:16, 0], x.samples[:16, 1], 'dm')
    plt.scatter(y.samplesU01[16:, 0], y.samplesU01[16:, 1], marker='s', color='black')
    plt.ylim(0, 1)
    plt.xlim(0, 1)
    plt.show()

.. _sphx_glr_download_auto_examples_sampling_refined_stratified_sampling_refined_stratified_voronoi_random.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/SURGroup/UQpy/master?urlpath=lab/tree/notebooks/auto_examples/sampling/refined_stratified_sampling/refined_stratified_voronoi_random.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: refined_stratified_voronoi_random.ipynb <refined_stratified_voronoi_random.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: refined_stratified_voronoi_random.py <refined_stratified_voronoi_random.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: refined_stratified_voronoi_random.zip <refined_stratified_voronoi_random.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
