
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/sensitivity/morris/plot_morris_2d_gfunction.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_sensitivity_morris_plot_morris_2d_gfunction.py>`
        to download the full example code. or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_sensitivity_morris_plot_morris_2d_gfunction.py:


2-dimensional g-function
==============================================

.. GENERATED FROM PYTHON SOURCE LINES 9-10

Initially we have to import the necessary modules.

.. GENERATED FROM PYTHON SOURCE LINES 13-22

.. code-block:: Python

    import shutil

    from UQpy.run_model.model_execution.PythonModel import PythonModel
    from UQpy.run_model.RunModel import RunModel
    from UQpy.distributions import Uniform
    from UQpy.sensitivity import MorrisSensitivity
    import numpy as np
    import matplotlib.pyplot as plt








.. GENERATED FROM PYTHON SOURCE LINES 23-24

Set-up problem with g-function.

.. GENERATED FROM PYTHON SOURCE LINES 27-37

.. code-block:: Python


    a_values = [0.001, 99.]
    na = len(a_values)

    model = PythonModel(model_script='local_pfn.py', model_object_name='gfun_sensitivity', delete_files=True,
                        a_values=a_values, var_names=['X{}'.format(i) for i in range(na)])
    runmodel_object = RunModel(model=model)

    dist_object = [Uniform(), ] * na








.. GENERATED FROM PYTHON SOURCE LINES 38-39

First plot contour of the function, clearly X2 has little influence on the function compared to X1.

.. GENERATED FROM PYTHON SOURCE LINES 42-84

.. code-block:: Python


    x = np.arange(0, 1, 0.02)
    y = np.arange(0, 1, 0.02)
    xx, yy = np.meshgrid(x, y, sparse=False)
    runmodel_object.run(samples=np.vstack([xx.reshape((-1,)), yy.reshape((-1,))]).T, append_samples=False)
    h = plt.contourf(x, y, np.array(runmodel_object.qoi_list).reshape(xx.shape))
    plt.xlabel('X1')
    plt.ylabel('X2')
    plt.show()

    sens = MorrisSensitivity(runmodel_object=runmodel_object,
                             distributions=dist_object,
                             n_levels=9)
    sens.run(n_trajectories=10)

    fig, ax = plt.subplots(figsize=(4, 4))
    for trajectory in sens.trajectories_physical_space[:5]:
        ax.plot(trajectory[:, 0], trajectory[:, 1], marker='x', linewidth=3)
    ax.set_xlim([0, 1])
    ax.set_ylim([0, 1])
    ax.set_xticks(np.arange(0., 1. + 0.5 / (sens.n_levels - 1), 1. / (sens.n_levels - 1)), minor=True)
    ax.set_xticks([0., 1.], minor=False)
    ax.set_xticklabels([0., 1.])
    ax.set_yticks(np.arange(0., 1. + 0.5 / (sens.n_levels - 1), 1. / (sens.n_levels - 1)), minor=True)
    ax.set_yticks([0., 1.], minor=False)
    ax.set_yticklabels([0., 1.])
    ax.grid(True, which='both')
    ax.set_xlabel(r'$X_{1}$', fontsize=14)
    ax.set_ylabel(r'$X_{2}$', fontsize=14)
    plt.show()

    print(['a{}={}'.format(i + 1, ai) for i, ai in enumerate(a_values)])

    fig, ax = plt.subplots()
    ax.scatter(sens.mustar_indices, sens.sigma_indices)
    for i, (mu, sig) in enumerate(zip(sens.mustar_indices, sens.sigma_indices)):
        ax.text(x=mu + 0.01, y=sig + 0.01, s='X{}'.format(i + 1))
    ax.set_xlabel(r'$\mu^{\star}$', fontsize=14)
    ax.set_ylabel(r'$\sigma$', fontsize=14)
    ax.set_title('Morris sensitivity indices', fontsize=16)
    plt.show()




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/sensitivity/morris/images/sphx_glr_plot_morris_2d_gfunction_001.png
         :alt: plot morris 2d gfunction
         :srcset: /auto_examples/sensitivity/morris/images/sphx_glr_plot_morris_2d_gfunction_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/sensitivity/morris/images/sphx_glr_plot_morris_2d_gfunction_002.png
         :alt: plot morris 2d gfunction
         :srcset: /auto_examples/sensitivity/morris/images/sphx_glr_plot_morris_2d_gfunction_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/sensitivity/morris/images/sphx_glr_plot_morris_2d_gfunction_003.png
         :alt: Morris sensitivity indices
         :srcset: /auto_examples/sensitivity/morris/images/sphx_glr_plot_morris_2d_gfunction_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ['a1=0.001', 'a2=99.0']





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.204 seconds)


.. _sphx_glr_download_auto_examples_sensitivity_morris_plot_morris_2d_gfunction.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/SURGroup/UQpy/master?urlpath=lab/tree/notebooks/auto_examples/sensitivity/morris/plot_morris_2d_gfunction.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_morris_2d_gfunction.ipynb <plot_morris_2d_gfunction.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_morris_2d_gfunction.py <plot_morris_2d_gfunction.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_morris_2d_gfunction.zip <plot_morris_2d_gfunction.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
