
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/sensitivity/generalised_sobol/generalised_sobol_mechanical_oscillator_ODE.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_sensitivity_generalised_sobol_generalised_sobol_mechanical_oscillator_ODE.py>`
        to download the full example code. or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_sensitivity_generalised_sobol_generalised_sobol_mechanical_oscillator_ODE.py:


Mechanical oscillator model (multioutput)
==============================================

.. GENERATED FROM PYTHON SOURCE LINES 7-31

.. code-block:: Python


    r"""
    In this example, we consider the mechanical oscillator is governed by the following 
    second-order ODE as demonstrated in [1]_:

    .. math::
        m \ddot{x} + c \dot{x} + k x = 0

    .. math::
        x(0) = \ell, \dot{x}(0) = 0.

    The parameteres of the oscillator are modeled as follows:

    .. math::
        m \sim \mathcal{U}(10, 12), c \sim \mathcal{U}(0.4, 0.8), k \sim \mathcal{U}(70, 90), \ell \sim \mathcal{U}(-1, -0.25).

    Unlike the pointwise-in-time Sobol indices, which provide the sensitivity of the model 
    parameters at each point in time, the GSI indices summarise the sensitivities of the 
    model parameters over the entire time period.

    .. [1] Gamboa, F., Janon, A., Klein, T., & Lagnoux, A. (2014). Sensitivity analysis for multidimensional and functional outputs. Electronic Journal of Statistics, 8(1), 575-603.

    """


.. GENERATED FROM PYTHON SOURCE LINES 32-43

.. code-block:: Python

    import numpy as np

    from UQpy.run_model.RunModel import RunModel
    from UQpy.run_model.model_execution.PythonModel import PythonModel
    from UQpy.distributions import Uniform, Normal
    from UQpy.distributions.collection.JointIndependent import JointIndependent
    from UQpy.sensitivity.GeneralisedSobolSensitivity import GeneralisedSobolSensitivity
    from UQpy.sensitivity.PostProcess import *

    np.random.seed(123)


.. GENERATED FROM PYTHON SOURCE LINES 44-45

**Define the model and input distributions**

.. GENERATED FROM PYTHON SOURCE LINES 45-63

.. code-block:: Python


    # Create Model object
    model = PythonModel(
        model_script="local_mechanical_oscillator_ODE.py",
        model_object_name="mech_oscillator",
        var_names=[r"$m$", "$c$", "$k$", "$\ell$"],
        delete_files=True,
    )

    runmodel_obj = RunModel(model=model)

    # Define distribution object
    M = Uniform(10, (12 - 10))
    C = Uniform(0.4, (0.8 - 0.4))
    K = Uniform(70, (90 - 70))
    L = Uniform(-1, (-0.25 - -1))
    dist_object = JointIndependent([M, C, K, L])


.. GENERATED FROM PYTHON SOURCE LINES 64-65

**Compute generalised Sobol indices**

.. GENERATED FROM PYTHON SOURCE LINES 67-71

.. code-block:: Python

    SA = GeneralisedSobolSensitivity(runmodel_obj, dist_object)

    SA.run(n_samples=500)


.. GENERATED FROM PYTHON SOURCE LINES 72-83

**First order Generalised Sobol indices**

Expected generalised Sobol indices:

:math:`GS_{m}` = 0.0826

:math:`GS_{c}` = 0.0020

:math:`GS_{k}` = 0.2068

:math:`GS_{\ell}` = 0.0561

.. GENERATED FROM PYTHON SOURCE LINES 85-95

.. code-block:: Python

    SA.generalized_first_order_indices

    # **Plot the first order sensitivity indices**
    fig1, ax1 = plot_sensitivity_index(
        SA.generalized_first_order_indices[:, 0],
        plot_title="First order Generalised Sobol indices",
        variable_names=[r"$m$", "$c$", "$k$", "$\ell$"],
        color="C0",
    )


.. GENERATED FROM PYTHON SOURCE LINES 96-97

**Total order Generalised Sobol indices**

.. GENERATED FROM PYTHON SOURCE LINES 99-110

.. code-block:: Python

    SA.generalized_total_order_indices

    # **Plot the first and total order sensitivity indices**
    fig2, ax2 = plot_index_comparison(
        SA.generalized_first_order_indices[:, 0],
        SA.generalized_total_order_indices[:, 0],
        label_1="First order",
        label_2="Total order",
        plot_title="First and Total order Generalised Sobol indices",
        variable_names=[r"$m$", "$c$", "$k$", "$\ell$"],
    )


.. _sphx_glr_download_auto_examples_sensitivity_generalised_sobol_generalised_sobol_mechanical_oscillator_ODE.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/SURGroup/UQpy/master?urlpath=lab/tree/notebooks/auto_examples/sensitivity/generalised_sobol/generalised_sobol_mechanical_oscillator_ODE.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: generalised_sobol_mechanical_oscillator_ODE.ipynb <generalised_sobol_mechanical_oscillator_ODE.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: generalised_sobol_mechanical_oscillator_ODE.py <generalised_sobol_mechanical_oscillator_ODE.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: generalised_sobol_mechanical_oscillator_ODE.zip <generalised_sobol_mechanical_oscillator_ODE.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
