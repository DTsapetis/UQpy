name: Build & Deploy Sphinx Docs

on:
  pull_request:
    branches:
      - master  # Run on PRs to main (for validation & preview deploy)
    paths:
      - 'docs/**'
      - 'src/**'  # Run only if docs or src changes
  push:
    branches:
      - master  # Deploy to production when merged
    paths:
      - 'docs/**'
      - 'src/**'  # Run only if docs or src changes
  workflow_dispatch:

permissions:
  contents: write  # Needed for GitHub Pages deployment

jobs:
  build-docs:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
            python-version: 3.9
            cache: 'pip'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python setup.py 1.0.0 develop
          pip install -r docs/requirements.txt
      - name: Make the Sphinx Docs
        run: |
          make -C docs clean
          make -C docs html SPHINXOPTS="-j auto"

      - name: Upload Built Docs as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sphinx-docs
          path: docs/build/html
          retention-days: 1  # Keep it only for 1 day to avoid unnecessary storage

  deploy-staging:
    needs: build-docs
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Built Docs Artifact
        uses: actions/download-artifact@v4
        with:
          name: sphinx-docs
          path: docs/build/html

      - name: Deploy to GitHub Pages (Staging)
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages-preview  # Separate branch for previews
          publish_dir: docs/build/html
          keep_files: false  # Overwrite previous previews
          force_orphan: true  # Ensure a clean preview branch

      - name: Comment PR with Preview Link
        uses: mshick/add-pr-comment@v2
        with:
          message: "ðŸ“– **Docs Preview:** [Staging Docs](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/)"

  deploy-production:
    needs: build-docs
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Built Docs Artifact
        uses: actions/download-artifact@v4
        with:
          name: sphinx-docs
          path: docs/build/html

      - name: Deploy to GitHub Pages (Production)
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages  # Main GitHub Pages branch
          publish_dir: docs/build/html
          keep_files: false  # Overwrite old site
          force_orphan: true  # Ensure a clean gh-pages branch
      - name: Check for Broken Links
        run: |
          pip install linkchecker
          linkchecker https://dtsapetis.github.io/UQpy/

  
