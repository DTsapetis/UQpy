name: Build and Test

on: 
    push:
        branches:
        - master
        - feature/*
        - bugfix/*
    pull_request:
        branches:
        - master

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:    
    linting:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v4
        - name: Install Pylint
          run: pip install pylint
        - name: Lint code
          run: pylint --ignored-modules=numpy,scipy,matplotlib,sklearn --disable=E0601,E0606,E0202,E1136,E1120,E0401,E0213 --disable=R,C,W src/UQpy

    testing:
        runs-on: ubuntu-latest
        strategy:
          matrix:
            group: [1, 2, 3, 4, 5]
        steps:
          - uses: actions/checkout@v4
          - name: Set up Python 3.9
            uses: actions/setup-python@v5
            with:
              python-version: 3.9
              cache: 'pip'
          - name: Install dependencies
            run: |
                python -m pip install --upgrade pip
                pip install -r requirements.txt
                pip install pytest pytest-cov pytest-split
          - name: Run tests
            run: PYTHONPATH=src pytest --splits 150 --group ${{ matrix.group }} --cov=src tests/ --junitxml=junit/test-results.xml --cov-report=xml --cov-report=html 
          - name: Upload test results
            uses: actions/upload-artifact@v4
            with:
              name: test-results${{ matrix.group }}
              path: junit/test-results.xml
          - name: Upload coverage reports
            uses: actions/upload-artifact@v4
            with:
              name: coverage-${{ matrix.group }}
              path: coverage.xml
    
    coverage:
        needs: testing
        runs-on: ubuntu-latest
        steps: 
          - name: Download all artifacts
            uses: actions/download-artifact@v4
          
          # - name: Merge JUnit XML reports
          #   run: |
          #     pip install junitparser
          #     python -c "
          #     from junitparser import JUnitXml
          #     import glob

          #     result = JUnitXml()
          #     for file in glob.glob('reports/test-results-*/test-results.xml'):
          #         result += JUnitXml.fromfile(file)

          #     result.write('merged-junit.xml')
          #     "

          - name: Run coverage
            run: |
              pip install coverage
              coverage combine reports/coverage-*/coverage.xml
              coverage xml -o merged-coverage.xml