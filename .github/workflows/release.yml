name: Package & Release

on:
  push:
    branches:
      - master

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Code
          uses: actions/checkout@v4
          with:
            fetch-depth: 0 

        - name: Install .NET
          uses: actions/setup-dotnet@v4
          with:
            dotnet-version: '8.x'

        - name: Install GitVersion as .NET tool
          run: |
            dotnet tool install --global GitVersion.Tool
            dotnet tool list -g
            dotnet-gitversion /version          

        - name: Run GitVersion
          run: |
            dotnet-gitversion /output buildserver
            # dotnet-gitversion /output json
        
        # - name: Install GitVersion
        #   uses: gittools/actions/gitversion/setup@v3.2.1
        #   with:
        #     versionSpec: '6.x'
        
        # - name: Determine Version
        #   id: versioning_step 
        #   uses: gittools/actions/gitversion/execute@v3.2.1
        #   with:
        #     useConfigFile: true
        #     configFilePath: 'GitVersion.yml'

        - name: Display GitVersion variables (without prefix)
          run: |
            echo "FullSemVer (env.fullSemVer)            : ${{ env.fullSemVer }}"
            echo "MajorMinorPatch (env.majorMinorPatch)  : ${{ env.majorMinorPatch }}"
            echo "SemVer (env.semVer)                    : ${{ env.semVer }}"

        - name: Display calculated version
          run: |
            echo "Version: ${{ steps.versioning_step.outputs.fullSemVer }}"  

            - name: Update pyproject.toml with version
        
        - name: Update pyproject.toml with version  
          run: |
            VERSION="${{ steps.versioning_step.outputs.fullSemVer }}"
            echo "Replacing version with $VERSION in pyproject.toml"
            sed -i "s/^version = \".*\"/version = \"$VERSION\"/" pyproject.toml
            cat pyproject.toml
        
          
