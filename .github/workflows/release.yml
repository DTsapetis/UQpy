name: Package & Release

on:
  push:
    branches:
      - master

permissions:                            
  id-token: write 

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Code
          uses: actions/checkout@v4
          with:
            fetch-depth: 0 

        - name: Install .NET
          uses: actions/setup-dotnet@v4
          with:
            dotnet-version: '8.x'

        - name: Install GitVersion as .NET tool
          run: |
            dotnet tool install --global GitVersion.Tool --version 5.*
            dotnet tool list -g
            dotnet-gitversion /version          

        - name: Run GitVersion
          run: |
            dotnet-gitversion /config GitVersion.yml
            VERSION=$(dotnet-gitversion /showvariable MajorMinorPatch)
            echo "VERSION=$VERSION" >> $GITHUB_ENV

        - name: Use env variable
          run: echo "GitVersion VERSION = $VERSION"

        - name: Update pyproject.toml with version  
          run: |
            echo "Replacing version with $VERSION in pyproject.toml"
            sed -i "s/^version = \".*\"/version = \"$VERSION\"/" pyproject.toml
            cat pyproject.toml
            
        - name: Set up Python 3.12
          uses: actions/setup-python@v5
          with:
            python-version: '3.12'
            cache: 'pip'

        - name: Install build tools
          run: python -m pip install --upgrade build twine

        - name: Build package
          run: |
            python -m build -s -w -v

        - name: Check package validity
          run: twine check dist/*

        - name: Install sigstore
          run: pip install sigstore

        - name: Sign .whl file
          run: |
            sigstore sign dist/*.whl
            sigstore sign dist/*.tar.gz

        - name: Generate SHA256 checksums
          run: |
            sha256sum dist/* > dist/sha256sums.txt
            cat dist/sha256sums/txt
            cd dist
            ls -la
            cd ..

        # - name: Upload signatures
        #   uses: actions/upload-artifact@v4
        #   with:
        #     name: signed-artifacts
        #     path: |
        #       dist/*.sig
        #       dist/*.crt
        
        - name: Upload package artifact
          uses: actions/upload-artifact@v4
          with:
            name: built-dist
            path: dist/
    

    # build-docker-image:
    #     name: Build Docker Image
    #     runs-on: ubuntu-latest
    #     steps:
    #       - uses: actions/checkout@v4
  
    #       - name: Set up Docker Buildx
    #         uses: docker/setup-buildx-action@v3
  
    #       - name: Build and save Docker image
    #         run: |
    #           docker build -t test-uqpy:latest .
    #           docker save test-uqpy:latest -o test-uqpy.tar
  
    #       - name: Upload Docker image as artifact
    #         uses: actions/upload-artifact@v4
    #         with:
    #           name: docker-image
    #           path: test-uqpy.tar
          
    #       - name: Install Cosign
    #         uses: sigstore/cosign-installer@v3
            
          # - name: Login to GHCR
          #   run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

          # - name: Sign Docker image with GitHub OIDC
          #   env:
          #     COSIGN_EXPERIMENTAL: "1"
          #   run: |
          #     cosign sign ghcr.io/${{ github.repository_owner }}/test-uqpy:${{ steps.get-version.outputs.version }}
              

    wait-for-approval:
          name: Await Manual Approval
          runs-on: ubuntu-latest
          needs: [build]
          environment:
            name: production
          steps:
            - name: Manual approval gate
              run: echo "Waiting for approval..."    
          
